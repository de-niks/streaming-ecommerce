

services:
 zookeeper:
   image: confluentinc/cp-zookeeper:7.4.0
   hostname: zookeeper
   container_name: zookeeper
   ports:
     - "2181:2181"
   environment:
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000
   healthcheck:
     test: ['CMD','bash', '-c',"echo 'ruok' | nc localhost 2181"]
     interval: 10s
     timeout: 5s
     retries: 5
   networks:
     - datalab
 broker:
   image: confluentinc/cp-server:7.4.0
   hostname: broker
   container_name: broker
   depends_on:
     zookeeper:
       condition: service_healthy
   ports:
     - "9092:9092"
     - "9101:9101"
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
     KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
     KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
     KAFKA_JMX_PORT: 9101
     KAFKA_JMX_HOSTNAME: localhost
     KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8082
     CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
     CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
     CONFLUENT_METRICS_ENABLE: 'false'
     CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
   networks:
     - datalab
   healthcheck:
     test: [ 'CMD','bash', '-c',"nc -z localhost 9092" ]
     interval: 10s
     timeout: 5s
     retries: 5
 postgres:
   image: postgres:latest
   container_name: postgres
   ports:
     - "5432:5432"
   environment:
     POSTGRES_USER: postgres
     POSTGRES_PASSWORD: postgres
     POSTGRES_DB: postgres
   healthcheck:
     test: [ "CMD","pg_isready","-U", "postgres" ]
     interval: 10s
     timeout: 5s
     retries: 5
 elasticsearch:
   image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
   container_name: es-container
   environment:
     - xpack.security.enabled=false
     - discovery.type=single-node
     - 'ES_JAVA_OPTS= -Xmx256m -Xms256m'
     - 'action.auto_create_index = true'
   ports:
     - 9200:9200
 kibana:
   image: docker.elastic.co/kibana/kibana:8.11.1
   container_name: kb-container
   environment:
     - ELASTICSEARCH_HOST=http://es-container:9200
   depends_on:
     - elasticsearch
   ports:
     - 5601:5601
networks:
   datalab:
